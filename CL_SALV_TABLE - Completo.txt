ALV Classe SALV completao:


	data: alv_pedido type ref to cl_salv_table.

    DATA: gr_functions    TYPE REF TO cl_salv_functions,
          gr_columns      TYPE REF TO cl_salv_columns_table,
          gr_column       TYPE REF TO cl_salv_column_table,
          gr_events       TYPE REF TO cl_salv_events_table,
          obj_error       TYPE REF TO cx_salv_error,
          ls_color        TYPE lvc_s_colo,
          lt_fieldcat     TYPE lvc_t_fcat,
          ls_layout       TYPE lvc_s_layo,
          ls_stable       TYPE lvc_s_stbl,
          lo_toolbar TYPE REF TO cl_gui_toolbar,
		  o_selections    TYPE REF TO cl_salv_selections,
		  gr_container    TYPE ref to cl_gui_custom_container,
		  vl_msg_erro     TYPE string,
		  ol_msg          type REF TO cx_salv_msg,
		  lt_rows         type ref to salv_t_row,
		  lo_aggrs        TYPE REF TO cl_salv_aggregations,
		  gr_display   type ref to cl_salv_display_settings.
		 


     TRY .
	 
*	 	CREATE OBJECT gr_container
*           EXPORTING
*             container_name = 'CONTAINER_PESQUISA'.
	 
        "Cria objecto ALV
        cl_salv_table=>factory(
          EXPORTING r_container    = gr_container
                    container_name = 'CONTAINER_RELATORIO'
          IMPORTING r_salv_table = alv_pedido
          CHANGING t_table = t_grade_pedido ).
		  
      CATCH cx_salv_msg INTO ol_msg.
    
        CLEAR vl_msg_erro.
        vl_msg_erro = ol_msg->get_text( ).

       WRITE:
         / 'Erro ao exibir lista:'(e04),
           vl_msg_erro.

        LEAVE LIST-PROCESSING.
      ENDTRY.

        "Cria Menu
        gr_functions = alv_pedido->get_functions( ).
        gr_functions->set_all( abap_true ).

        "Adiciona icone para marcar todas linhas
        adiciona_icone( im_functions = gr_functions
                        im_code      = c_cod_marcar
                        im_icone     = icon_select_all
                        im_tooltip   = 'Marca todas linhas' ).

        "Adiciona icone para desmarcar todas linhas
        adiciona_icone( im_functions = gr_functions
                        im_code      = c_cod_desmarcar
                        im_icone     = icon_deselect_all
                        im_tooltip   = 'Desmarca todas linhas' ).

        "Otimiza layout
        gr_columns = alv_pedido->get_columns( ).
        gr_columns->set_optimize( abap_true ).
		
		  gr_display = gr_table->get_display_settings( ).
  gr_display->set_striped_pattern( cl_salv_display_settings=>true ).

        "Oculta campo
        gr_column ?= gr_columns->get_column( 'ITEM_CONTRATO' ).
        gr_column->set_visible( abap_false ).

        "Define como hotspot
        gr_column ?= gr_columns->get_column( 'MATNR' ).
        gr_column->set_cell_type( if_salv_c_cell_type=>hotspot ).

        "Tamanho Coluna
        gr_column ?= gr_columns->get_column( 'NOME_ARQUIVO' ).
        gr_column->set_output_length( 50 ).

        "Altera titulo
        gr_column ?= gr_columns->get_column( 'MDV' ).
        gr_column->set_short_text( 'MDV' ). "10
        gr_column->set_medium_text( 'MDV' ). "20
        gr_column->set_long_text( 'MDV' ). "40
		
		"somar valors da coluna
		lo_aggrs = alv_pedido->get_aggregations( ).
		lo_aggrs->add_aggregation( 'VLR_VENDA' ).
		

		o_selections = alv_pedido->get_selections( ).
		o_selections->set_selection_mode( o_selections->multiple ). 
		

*		call method alv_pedido->get_metadata( ).
*       lt_rows = lo_selections->get_selected_rows( ).
		
         Selecionar colunas		
		  append 'CARRID' to lt_column.
          append 'CONNID' to lt_column.
          append 'FLDATE' to lt_column.
          lr_selections->set_selected_columns( lt_column ).
          
          selecionar linhas.
          append 1 to lt_rows.
          append 2 to lt_rows.
          append 3 to lt_rows.
          lr_selections->set_selected_rows( lt_rows ).
		  
   gr_table->set_screen_status(
                                pfstatus      =  'SALV_STANDARD'
                                report        =  gs_test-repid
                                set_functions = gr_table->c_functions_all ).
	                             	
		
		============================
		
		
		  IF alv_pedido IS BOUND.

              FREE: t_grade_pedido.
          
              gr_container->free( ).
          
          
              CLEAR: alv_pedido,
                     o_container.
          
            ENDIF.

	==============================
	
	DATA lo_cell_editor TYPE REF TO if_salv_wd_table_cell_editor.

DATA lo_col TYPE REF TO cl_salv_wd_column.

lo_col = wd_this->wd_cpifc_alv( )->get_model( )->if_salv_wd_column_settings~get_column( 'RESULT' ).

CREATE OBJECT lo_cell_editor TYPE cl_salv_wd_uie_dropdown_by_key          

     EXPORTING       

          selected_key_fieldname = 'RESULT'.

lo_col->set_cell_editor( lo_cell_editor ).



ob_salv_selections = ob_salv_table->get_selections( ).
ob_salv_selections->set_selection_mode( if_salv_c_selection_mode=>none ).
	
	==============================
	
	report com exemplos para EVENTO na classe SALV
	SALV_TEST_TABLE_EVENTS
		
		
		=================================================
		dica
		LVC_S_LAYO
		LVC_S_LAYO-SEL_MODE
		SEL_MODE. Selection mode, determines how rows can be selected. Can have the follwing values:

    A Multiple columns, multiple rows with selection buttons.
    B Simple selection, listbox, Single row/column
    C Multiple rows without buttons
    D Multiple rows with buttons and select all ICON
	
			    Register code for selection code; Type I (IF_SALV_C_SELECTION_MODE)

Selection Code	            Constant	Value
No selection	            NONE	    0
Single selection	        SINGLE	    1
Multiple selection	        MULTIPLE	2
Cell selection	            CELL	    3
Row and column selection	ROW_COLUMN	4
